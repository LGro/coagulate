on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  android:
    runs-on: ubuntu-latest
    container: ubuntu:24.04
    steps:
    - name: System dependencies with apt
      run: apt -qq update && apt -q install build-essential git curl jq android-sdk -y
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.27.0
    - name: Rust
      run: curl -proto '=https' -tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - name: Checkout Veilid
      run: cd .. && git clone https://gitlab.com/veilid/veilid.git
    - uses: actions/checkout@v4
    - name: Add Rust Targets
      shell: bash
      env:
        LC_ALL: en_US.UTF-8
        LANG: en_US.UTF-8
      run: |
        source "$HOME/.cargo/env"
        rustup target add armv7-linux-androideabi
        rustup target add aarch64-linux-android
        rustup target add i686-linux-android
        rustup target add x86_64-linux-android
    - name: Test
      shell: bash
      env:
        LC_ALL: en_US.UTF-8
        LANG: en_US.UTF-8
      run: |
        source "$HOME/.cargo/env"
        git config --global --add safe.directory /__t/flutter/stable-3.27.0-x64
        flutter config --no-analytics
        flutter pub get
        flutter test
    - name: Build APK
      shell: bash
      env:
        LC_ALL: en_US.UTF-8
        LANG: en_US.UTF-8
      run: |
        source "$HOME/.cargo/env"
        flutter clean
        flutter pub get
        flutter build apk --profile
    - uses: actions/upload-artifact@v4
      with:
        name: coagulate.apk
        path: build/app/outputs/flutter-apk/app-profile.apk
    - name: Upload APK
      if: github.ref == 'refs/heads/main'
      uses: Dylan700/sftp-upload-action@latest
      with:
        server: ${{secrets.FTP_SERVER}}
        username: ${{secrets.FTP_USER}}
        password: ${{secrets.FTP_PASSWORD}}
        port: 22
        uploads: ./build/app/outputs/flutter-apk/ => ./public_html/releases/

  # TODO: Set up signing certificates and re-enable
  # ios:
  #   runs-on: macos-latest
  #   steps:
  #   - name: Checkout Veilid
  #     run: cd .. && git clone https://gitlab.com/veilid/veilid.git
  #   - uses: actions/checkout@v3
  #   - uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: '3.19.1'
  #   - run: flutter pub get
  #   - run: flutter build ipa
